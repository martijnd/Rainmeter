; Lines starting ; (semicolons) are commented out.
; That is, they do not affect the code and are here for demonstration purposes only.
; ----------------------------------

[Rainmeter]
; This section contains general settings that can be used to change how Rainmeter behaves.
Update=1000

[Metadata]
; Contains basic information of the skin.
Name=System
Author=Martijn Dorsman
Information=Displays basic system stats.
Version=1.0.0

[Variables]
; Variables declared here can be used later on between two # characters (e.g. #MyVariable#).
fontName=Roboto thin
textSize=20
colorBar=235,170,0,255
colorText=195,207,56,255

; ----------------------------------
; MEASURES return some kind of value
; ----------------------------------

[measureCPU]
; This measure returns the average CPU load between all cores.
Measure=CPU
Processor=0

[measureRAM]
; Returns the amount of RAM used in bytes.
Measure=PhysicalMemory
UpdateDivider=20
; UpdateDivider sets the rate at which the value of the measure is updated. It is
; calculated as follows: UpdateDivider x Update. In this case, Update is set to
; 1000 milliseconds (in the [Rainmeter] section). 1000 x 20 = 20000 ms or 20 seconds.

[measureSWAP]
; Returns the amount of SWAP (pagefile) used in bytes.
Measure=SwapMemory
UpdateDivider=20

; ----------------------------------
; STYLES are used to "centralize" options
; ----------------------------------

[styleLeftText]
StringAlign=Left
; Meters using styleLeftText will be left-aligned.
StringCase=None
StringStyle=Bold
StringEffect=Shadow
FontEffectColor=0,0,0,20
FontColor=#colorText#
FontFace=#fontName#
FontSize=#textSize#
AntiAlias=1
ClipString=1

[styleRightText]
StringAlign=Right
StringCase=None
StringStyle=Bold
StringEffect=Shadow
FontEffectColor=0,0,0,20
FontColor=#colorText#
FontFace=#fontName#
FontSize=#textSize#
AntiAlias=1
ClipString=1

; ----------------------------------
; METERS display images, text, bars, etc.
; ----------------------------------

[meterLabelCPU]
Meter=String
MeterStyle=styleLeftText
X=10
Y=40
W=190
H=40
Text=CPU

[meterValueCPU]
Meter=String
MeterStyle=styleRightText
MeasureName=measureCPU
X=150
Y=0r
; r stands for relative. In this case, the Y position of meterValueCPU is 0 pixels
; below the Y value of the previous meter (i.e it's the same as in meterLabelCPU).
W=190
H=40
Text=%1%
; %1 stands for the value of MeasureName (measureCPU in this case).

[meterLabelRAM]
Meter=String
MeterStyle=styleLeftText
X=10
Y=62
W=190
H=40
Text=RAM

[meterValueRAM]
Meter=String
MeterStyle=styleRightText
MeasureName=measureRAM
X=150
Y=0r
W=190
H=40
Text=%1%
Percentual=1
; Percentual=1 needs to be added her because measureRAM returns the amount
; of RAM used in bytes. Using Percentual=1 will convert that into a percentual value.